##############################################################################
#                                                                            #
# IAR dsPIC C/EC++ Compiler V1.30B/W32                 13/Dec/2007  20:41:55 #
# Copyright 2001-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu          =  dsPIC                                                   #
#    Data model   =  Large                                                   #
#    Double size  =  32 bits                                                 #
#                 =                                                          #
#    Source file  =  probe_rs232_os.c                                        #
#    Command line =  -D__dsPIC33FJ256GP710__ probe_rs232_os.c                #
#                    -oC:\Micrium\Software\EVALBO~1\MICROC~1\EXPLOR~1\PIC33F #
#                    ~1\MPLAB_~1\OS-Probe\Output\probe_rs232_os.r59          #
#                    -fC:\Micrium\Software\EvalBoards\Microchip\Explorer16\P #
#                    IC33FJ256\MPLAB_IAR\OS-Probe\ExtPath.xcl (-I            #
#                    "C:\Program Files\IAR Systems\Embedded Workbench        #
#                    3.2\dsPIC\inc\clib" -I "C:\Program Files\IAR            #
#                    Systems\Embedded Workbench 3.2\dsPIC\inc" -I            #
#                    C:\Micrium\Software\uC-CPU -I                           #
#                    C:\Micrium\Software\uC-CPU\Microchip\PIC33FJ256\MPLAB_I #
#                    AR -I C:\Micrium\Software\uC-LIB -I                     #
#                    C:\Micrium\Software\uCOS-II\Source -I                   #
#                    C:\Micrium\Software\uCOS-II\Ports\Microchip\PIC33FJ256\ #
#                    MPLAB_IAR -I C:\Micrium\Software\uC-Probe\Target\Commun #
#                    ication\Generic\RS-232\Ports\Microchip\dsPIC33\IAR_iccD #
#                    SPIC -I C:\Micrium\Software\uC-Probe\Target\Communicati #
#                    on\Generic\RS-232\Source -I                             #
#                    C:\Micrium\Software\uC-Probe\Target\Communication\Gener #
#                    ic\Source -I C:\Micrium\Software\uC-Probe\Target\Plugin #
#                    s\uCOS-II -I C:\Micrium\Software\EvalBoards\Microchip\E #
#                    xplorer16\PIC33FJ256\MPLAB_IAR\OS-Probe -I              #
#                    C:\Micrium\Software\EvalBoards\Microchip\Explorer16\PIC #
#                    33FJ256\MPLAB_IAR\BSP) -r -e --data_model=l --cpu=0     #
#                    -lc . -la . -z9 --no_cse --no_unroll --no_inline        #
#                    --no_code_motion                                        #
#    List file    =  .\probe_rs232_os.lst                                    #
#    Object file  =  C:\Micrium\Software\EVALBO~1\MICROC~1\EXPLOR~1\PIC33F~1 #
#                    \MPLAB_~1\OS-Probe\Output\probe_rs232_os.r59            #
#                                                                            #
#                                                                            #
##############################################################################

C:\Micrium\Software\uC-Probe\Target\Communication\Generic\RS-232\OS\uCOS-II\probe_rs232_os.c
      1          /*
      2          *********************************************************************************************************
      3          *                                      uC/Probe Communication
      4          *
      5          *                           (c) Copyright 2007; Micrium, Inc.; Weston, FL
      6          *
      7          *               All rights reserved.  Protected by international copyright laws.
      8          *               Knowledge of the source code may NOT be used to develop a similar product.
      9          *               Please help us continue to provide the Embedded community with the finest
     10          *               software available.  Your honesty is greatly appreciated.
     11          *********************************************************************************************************
     12          */
     13          
     14          /*
     15          *********************************************************************************************************
     16          *
     17          *                                              uC/Probe
     18          *
     19          *                                      Communication: RS-232
     20          *
     21          * Filename      : probe_rs232_os.c
     22          * Version       : V1.40
     23          * Programmer(s) : BAN
     24          * Note(s)       : (1) This file is the uC/OS-II layer for the uC/Probe RS-232 Communication Module.
     25          *********************************************************************************************************
     26          */
     27          
     28          /*
     29          *********************************************************************************************************
     30          *                                            INCLUDE FILES
     31          *********************************************************************************************************
     32          */
     33          
     34          #include  <probe_com.h>
     35          #include  <probe_rs232.h>
     36          #include  <ucos_ii.h>
     37          
     38          #if (PROBE_COM_METHOD_RS232 > 0)
     39          
     40          /*
     41          *********************************************************************************************************
     42          *                                            LOCAL DEFINES
     43          *********************************************************************************************************
     44          */
     45          
     46          
     47          /*
     48          *********************************************************************************************************
     49          *                                           LOCAL CONSTANTS
     50          *********************************************************************************************************
     51          */
     52          
     53          
     54          /*
     55          *********************************************************************************************************
     56          *                                          LOCAL DATA TYPES
     57          *********************************************************************************************************
     58          */
     59          
     60          
     61          /*
     62          *********************************************************************************************************
     63          *                                            LOCAL TABLES
     64          *********************************************************************************************************
     65          */
     66          
     67          
     68          /*
     69          *********************************************************************************************************
     70          *                                       LOCAL GLOBAL VARIABLES
     71          *********************************************************************************************************
     72          */
     73          
     74          #if (PROBE_RS232_PARSE_TASK > 0)
     75          static  OS_STK     ProbeRS232_OS_TaskStk[PROBE_RS232_TASK_STK_SIZE];    /* Probe RS-232 task stack                          */
     76          
     77          #if (OS_SEM_EN > 0)
     78          static  OS_EVENT  *ProbeRS232_OS_Sem;                                   /* Packet receive signal                            */
     79          #endif
     80          
     81          #endif
     82          
     83          
     84          /*
     85          *********************************************************************************************************
     86          *                                      LOCAL FUNCTION PROTOTYPES
     87          *********************************************************************************************************
     88          */
     89          
     90          #if (PROBE_RS232_PARSE_TASK > 0)
     91          static  void  ProbeRS232_OS_Task(void *p_arg);                          /* Probe RS-232 task                                */
     92          #endif
     93          
     94          
     95          /*
     96          *********************************************************************************************************
     97          *                                     LOCAL CONFIGURATION ERRORS
     98          *********************************************************************************************************
     99          */
    100          
    101          #if (PROBE_RS232_PARSE_TASK > 0) && (OS_SEM_EN == 0)
    102            #error  "If PROBE_RS232_PARSE_TASK is set to DEF_TRUE, then semaphores MUST be enabled."
    103          #endif
    104          
    105          
    106          /*
    107          *********************************************************************************************************
    108          *********************************************************************************************************
    109          **                                          GLOBAL FUNCTIONS
    110          *********************************************************************************************************
    111          *********************************************************************************************************
    112          */
    113          
    114          /*
    115          *********************************************************************************************************
    116          *                                         ProbeRS232_OS_Init()
    117          *
    118          * Description : Create RTOS objects for RS-232 communication.
    119          *
    120          * Argument(s) : none.
    121          *
    122          * Return(s)   : none.
    123          *********************************************************************************************************
    124          */
    125          
    126          #if (PROBE_RS232_PARSE_TASK > 0)
    127          void  ProbeRS232_OS_Init (void)
    128          {
    129              CPU_INT08U  err;
    130          
    131          
    132          #if (OS_SEM_EN > 0)
    133              ProbeRS232_OS_Sem = OSSemCreate(0);
    134          #if   (OS_EVENT_NAME_SIZE > 16)
    135              OSEventNameSet(ProbeRS232_OS_Sem, (CPU_INT08U *)"uC/Probe RS-232", &err);
    136          #elif (OS_EVENT_NAME_SIZE > 13)
    137              OSEventNameSet(ProbeRS232_OS_Sem, (CPU_INT08U *)"Probe RS-232", &err);
    138          #endif
    139          #endif
    140          
    141          #if (OS_TASK_CREATE_EXT_EN > 0)
    142              #if (OS_STK_GROWTH == 1)
    143              err = OSTaskCreateExt( ProbeRS232_OS_Task,
    144                                     (void *)0,
    145                                    &ProbeRS232_OS_TaskStk[PROBE_RS232_TASK_STK_SIZE - 1],    /* Set Top-Of-Stack.                    */
    146                                     PROBE_RS232_TASK_PRIO,
    147                                     PROBE_RS232_TASK_PRIO,
    148                                    &ProbeRS232_OS_TaskStk[0],                                /* Set Bottom-Of-Stack.                 */
    149                                     PROBE_RS232_TASK_STK_SIZE,
    150                                     (void *)0,                                               /* No TCB extension.                    */
    151                                     OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);              /* Enable stack checking + clear stack. */
    152              #else
    153              err = OSTaskCreateExt( ProbeRS232_OS_Task,
    154                                     (void *)0,
    155                                    &ProbeRS232_OS_TaskStk[0],                                /* Set Top-Of-Stack.                    */
    156                                     PROBE_RS232_TASK_PRIO,
    157                                     PROBE_RS232_TASK_PRIO,
    158                                    &ProbeRS232_OS_TaskStk[PROBE_RS232_TASK_STK_SIZE - 1],    /* Set Bottom-Of-Stack.                 */
    159                                     PROBE_RS232_TASK_STK_SIZE,
    160                                     (void *)0,                                               /* No TCB extension.                    */
    161                                     OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);              /* Enable stack checking + clear stack. */
    162              #endif
    163          #else
    164              #if (OS_STK_GROWTH == 1)
    165              err = OSTaskCreate( ProbeRS232_OS_Task,
    166                                  (void *)0,
    167                                 &ProbeRS232_OS_TaskStk[PROBE_RS232_TASK_STK_SIZE - 1],
    168                                  PROBE_RS232_TASK_PRIO);
    169              #else
    170              err = OSTaskCreate( ProbeRS232_OS_Task,
    171                                  (void *)0,
    172                                 &ProbeRS232_OS_TaskStk[0],
    173                                  PROBE_RS232_TASK_PRIO);
    174              #endif
    175          #endif
    176          
    177          #if   (OS_TASK_NAME_SIZE > 13)
    178              OSTaskNameSet(PROBE_RS232_TASK_PRIO, (CPU_INT08U *)"Probe RS-232", &err);
    179          #endif
    180          }
    181          #endif
    182          
    183          
    184          /*
    185          *********************************************************************************************************
    186          *                                       ProbeRS232_OS_Pend()
    187          *
    188          * Description : Wait for a packet to be received.
    189          *
    190          * Argument(s) : none.
    191          *
    192          * Return(s)   : none.
    193          *********************************************************************************************************
    194          */
    195          
    196          #if (PROBE_RS232_PARSE_TASK > 0)
    197          void  ProbeRS232_OS_Pend (void)
    198          {
    199          #if (OS_SEM_EN > 0)
    200              CPU_INT08U  err;
    201          
    202          
    203              OSSemPend(ProbeRS232_OS_Sem, 0, &err);                          /* Wait for a packet to be received                     */
    204          #endif
    205          }
    206          #endif
    207          
    208          
    209          /*
    210          *********************************************************************************************************
    211          *                                       ProbeRS232_OS_Post()
    212          *
    213          * Description : Notify a pending task that a packet has been receieved.
    214          *
    215          * Argument(s) : none.
    216          *
    217          * Return(s)   : none.
    218          *********************************************************************************************************
    219          */
    220          
    221          #if (PROBE_RS232_PARSE_TASK > 0)
    222          void  ProbeRS232_OS_Post (void)
    223          {
    224          #if (OS_SEM_EN > 0)
    225              OSSemPost(ProbeRS232_OS_Sem);                                   /* A packet has been received                           */
    226          #endif
    227          }
    228          #endif
    229          
    230          
    231          /*
    232          *********************************************************************************************************
    233          *********************************************************************************************************
    234          **                                          LOCAL FUNCTIONS
    235          *********************************************************************************************************
    236          *********************************************************************************************************
    237          */
    238          
    239          /*
    240          *********************************************************************************************************
    241          *                                         ProbeRS232_OS_Task()
    242          *
    243          * Description : Task which waits for packets to be received, formalates responses, and begins transmission.
    244          *
    245          * Argument(s) : p_arg        Argument passed to ProbeRS232_OS_Task() by 'OSTaskCreate()'.
    246          *
    247          * Return(s)   : none.
    248          *********************************************************************************************************
    249          */
    250          
    251          #if (PROBE_RS232_PARSE_TASK > 0)
    252          static  void  ProbeRS232_OS_Task (void *p_arg)
    253          {
    254              ProbeRS232_Task(p_arg);
    255          }
    256          #endif
    257          
    258          #endif

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     ProbeRS232_OS_Init      10
       -> OSSemCreate         4
       -> OSEventNameSet      4
       -> OSTaskCreateExt    20
       -> OSTaskNameSet      20
     ProbeRS232_OS_Pend       2
       -> OSSemPend           4
     ProbeRS232_OS_Post       2
       -> OSSemPost           0
     ProbeRS232_OS_Task       2
       -> ProbeRS232_Task     0


   Segment part sizes:

     Function/Label             Bytes
     --------------             -----
     WREG0                         2
     WREG1                         2
     WREG2                         2
     WREG3                         2
     WREG4                         2
     WREG5                         2
     WREG6                         2
     WREG7                         2
     WREG8                         2
     WREG9                         2
     WREG10                        2
     WREG11                        2
     WREG12                        2
     WREG13                        2
     WREG14                        2
     WREG15                        2
     SPLIM                         2
     ACCAL                         2
     ACCAH                         2
     ACCAU                         2
     ACCBL                         2
     ACCBH                         2
     ACCBU                         2
     PCL                           2
     DOSTARTL                      2
     DOENDL                        2
     XMODSRT                       2
     XMODEND                       2
     YMODSRT                       2
     YMODEND                       2
     TMR1                          2
     PR1                           2
     TMR2                          2
     TMR3HLD                       2
     TMR3                          2
     PR2                           2
     PR3                           2
     TMR4                          2
     TMR5HLD                       2
     TMR5                          2
     PR4                           2
     PR5                           2
     TMR6                          2
     TMR7HLD                       2
     TMR7                          2
     PR6                           2
     PR7                           2
     TMR8                          2
     TMR9HLD                       2
     TMR9                          2
     PR8                           2
     PR9                           2
     IC1BUF                        2
     IC2BUF                        2
     IC3BUF                        2
     IC4BUF                        2
     IC5BUF                        2
     IC6BUF                        2
     IC7BUF                        2
     IC8BUF                        2
     OC1RS                         2
     OC1R                          2
     OC2RS                         2
     OC2R                          2
     OC3RS                         2
     OC3R                          2
     OC4RS                         2
     OC4R                          2
     OC5RS                         2
     OC5R                          2
     OC6RS                         2
     OC6R                          2
     OC7RS                         2
     OC7R                          2
     OC8RS                         2
     OC8R                          2
     U1BRG                         2
     U2BRG                         2
     SPI1BUF                       2
     SPI2BUF                       2
     RXBUF0                        2
     RXBUF1                        2
     RXBUF2                        2
     RXBUF3                        2
     TXBUF0                        2
     TXBUF1                        2
     TXBUF2                        2
     TXBUF3                        2
     AD1CSSH                       2
     DMA0STA                       2
     DMA0STB                       2
     DMA0PAD                       2
     DMA0CNT                       2
     DMA1STA                       2
     DMA1STB                       2
     DMA1PAD                       2
     DMA1CNT                       2
     DMA2STA                       2
     DMA2STB                       2
     DMA2PAD                       2
     DMA2CNT                       2
     DMA3STA                       2
     DMA3STB                       2
     DMA3PAD                       2
     DMA3CNT                       2
     DMA4STA                       2
     DMA4STB                       2
     DMA4PAD                       2
     DMA4CNT                       2
     DMA5STA                       2
     DMA5STB                       2
     DMA5PAD                       2
     DMA5CNT                       2
     DMA6STA                       2
     DMA6STB                       2
     DMA6PAD                       2
     DMA6CNT                       2
     DMA7STA                       2
     DMA7STB                       2
     DMA7PAD                       2
     DMA7CNT                       2
     DSADR                         2
     ProbeRS232_OS_TaskStk       500
     ProbeRS232_OS_Sem             4
     ProbeRS232_OS_Init          168
     ProbeRS232_OS_Pend           40
     ProbeRS232_OS_Post           20
     ProbeRS232_OS_Task           12
     ?<Constant "Probe RS-232">   26
     _A_C1CFG1                     2
     _A_C1INTE                     2
     _A_C1INTF                     2
     _A_C1FIFO                     2
     _A_C1FCTRL                    2
     _A_C1VEC                      2
     _A_C1CTRL2                    2
     _A_C1CTRL1                    2
     _A_DMACS1                     2
     _A_DMACS0                     2
     _A_DMA7REQ                    2
     _A_DMA7CON                    2
     _A_DMA6REQ                    2
     _A_DMA6CON                    2
     _A_DMA5REQ                    2
     _A_DMA5CON                    2
     _A_DMA4REQ                    2
     _A_DMA4CON                    2
     _A_DMA3REQ                    2
     _A_DMA3CON                    2
     _A_DMA2REQ                    2
     _A_DMA2CON                    2
     _A_DMA1REQ                    2
     _A_C1RXF3SID                  2
     _A_C1RXF2EID                  2
     _A_C1RXF2SID                  2
     _A_C1RXF1EID                  2
     _A_C1RXF1SID                  2
     _A_C1RXF0EID                  2
     _A_C1RXF0SID                  2
     _A_C1RXM2EID                  2
     _A_C1RXM2SID                  2
     _A_C1TR67CON                  2
     _A_C1TR45CON                  2
     _A_C1TR23CON                  2
     _A_C1TR01CON                  2
     _A_C1RXOVF2                   2
     _A_C1RXOVF1                   2
     _A_C1BUFPNT4                  2
     _A_C1BUFPNT3                  2
     _A_C1RXFUL2                   2
     _A_C1RXFUL1                   2
     _A_C1FMSKSEL2                 2
     _A_C1FMSKSEL1                 2
     _A_C1FEN1                     2
     _A_C1CFG2                     2
     _A_ODCA                       2
     _A_LATG                       2
     _A_PORTG                      2
     _A_TRISG                      2
     _A_LATF                       2
     _A_PORTF                      2
     _A_TRISF                      2
     _A_LATE                       2
     _A_PORTE                      2
     _A_TRISE                      2
     _A_LATD                       2
     _A_PORTD                      2
     _A_TRISD                      2
     _A_LATC                       2
     _A_PORTC                      2
     _A_TRISC                      2
     _A_LATB                       2
     _A_PORTB                      2
     _A_TRISB                      2
     _A_LATA                       2
     _A_PORTA                      2
     _A_TRISA                      2
     _A_RSCON                      2
     _A_DMA1CON                    2
     _A_DMA0REQ                    2
     _A_DMA0CON                    2
     _A_AD2CON4                    2
     _A_AD2CSSL                    2
     _A_AD2PCFG                    2
     _A_AD2CHS0                    2
     _A_AD2CHS123                  2
     _A_AD2CON3                    2
     _A_AD2CON2                    2
     _A_AD2CON1                    2
     _A_AD2BUF0                    2
     _A_AD1CON4                    2
     _A_AD1CSSL                    2
     _A_AD1PCFGL                   2
     _A_AD1PCFGH                   2
     _A_AD1CHS0                    2
     _A_AD1CHS123                  2
     _A_AD1CON3                    2
     _A_AD1CON2                    2
     _A_AD1CON1                    2
     _A_AD1BUF0                    2
     _A_ODCF                       2
     _A_C2RXF9EID                  2
     _A_C2RXF9SID                  2
     _A_C2RXF8EID                  2
     _A_C2RXF8SID                  2
     _A_C2RXF7EID                  2
     _A_C2RXF7SID                  2
     _A_C2RXF6EID                  2
     _A_C2RXF6SID                  2
     _A_C2RXF5EID                  2
     _A_C2RXF5SID                  2
     _A_C2RXF4EID                  2
     _A_C2RXF4SID                  2
     _A_C2RXF3EID                  2
     _A_C2RXF3SID                  2
     _A_C2RXF2EID                  2
     _A_C2RXF2SID                  2
     _A_C2RXF1EID                  2
     _A_C2RXF1SID                  2
     _A_C2RXF0EID                  2
     _A_C2RXF0SID                  2
     _A_C2RXM2EID                  2
     _A_C2RXM2SID                  2
     _A_C2TR67CON                  2
     _A_PMD3                       2
     _A_PMD2                       2
     _A_PMD1                       2
     _A_NVMKEY                     2
     _A_NVMCON                     2
     _A_OSCTUN                     2
     _A_PLLFBD                     2
     _A_CLKDIV                     2
     _A_OSCCON                     2
     _A_RCON                       2
     _A_C2RXF15EID                 2
     _A_C2RXF15SID                 2
     _A_C2RXF14EID                 2
     _A_C2RXF14SID                 2
     _A_C2RXF13EID                 2
     _A_C2RXF13SID                 2
     _A_C2RXF12EID                 2
     _A_C2RXF12SID                 2
     _A_C2RXF11EID                 2
     _A_C2RXF11SID                 2
     _A_C2RXF10EID                 2
     _A_C2RXF10SID                 2
     _A_C1RXF14EID                 2
     _A_C1RXF14SID                 2
     _A_C1RXF13EID                 2
     _A_C1RXF13SID                 2
     _A_C1RXF12EID                 2
     _A_C1RXF12SID                 2
     _A_C1RXF11EID                 2
     _A_C1RXF11SID                 2
     _A_C1RXF10EID                 2
     _A_C1RXF10SID                 2
     _A_C1RXF9EID                  2
     _A_C1RXF9SID                  2
     _A_C1RXF8EID                  2
     _A_C1RXF8SID                  2
     _A_C1RXF7EID                  2
     _A_C1RXF7SID                  2
     _A_C1RXF6EID                  2
     _A_C1RXF6SID                  2
     _A_C1RXF5EID                  2
     _A_C1RXF5SID                  2
     _A_C1RXF4EID                  2
     _A_C1RXF4SID                  2
     _A_C1RXF3EID                  2
     _A_C2TR45CON                  2
     _A_C2TR23CON                  2
     _A_C2TR01CON                  2
     _A_C2RXOVF2                   2
     _A_C2RXOVF1                   2
     _A_C2BUFPNT4                  2
     _A_C2BUFPNT3                  2
     _A_C2RXFUL2                   2
     _A_C2RXFUL1                   2
     _A_C2FMSKSEL2                 2
     _A_C2FMSKSEL1                 2
     _A_C2FEN1                     2
     _A_C2CFG2                     2
     _A_C2CFG1                     2
     _A_C2INTE                     2
     _A_C2INTF                     2
     _A_C2FIFO                     2
     _A_C2FCTRL                    2
     _A_C2VEC                      2
     _A_C2CTRL2                    2
     _A_C2CTRL1                    2
     _A_C1RXF15EID                 2
     _A_C1RXF15SID                 2
     _A_IPC10                      2
     _A_OC3CON                     2
     _A_IPC9                       2
     _A_IPC8                       2
     _A_IPC7                       2
     _A_IPC6                       2
     _A_IPC5                       2
     _A_IPC4                       2
     _A_IPC3                       2
     _A_IPC2                       2
     _A_IPC1                       2
     _A_IPC0                       2
     _A_OC4CON                     2
     _A_IEC4                       2
     _A_IEC3                       2
     _A_IEC2                       2
     _A_IEC1                       2
     _A_IEC0                       2
     _A_IFS4                       2
     _A_OC5CON                     2
     _A_IFS3                       2
     _A_IFS2                       2
     _A_IFS1                       2
     _A_IFS0                       2
     _A_INTCON2                    2
     _A_INTCON1                    2
     _A_IC7CON                     2
     _A_IC6CON                     2
     _A_IC5CON                     2
     _A_IC8CON                     2
     _A_IC4CON                     2
     _A_IC3CON                     2
     _A_IC2CON                     2
     _A_IC1CON                     2
     _A_T9CON                      2
     _A_T8CON                      2
     _A_OC1CON                     2
     _A_T7CON                      2
     _A_T6CON                      2
     _A_T5CON                      2
     _A_T4CON                      2
     _A_T3CON                      2
     _A_T2CON                      2
     _A_T1CON                      2
     _A_INTREG                     2
     _A_IPC17                      2
     _A_IPC16                      2
     _A_OC2CON                     2
     _A_IPC15                      2
     _A_IPC14                      2
     _A_IPC13                      2
     _A_IPC12                      2
     _A_IPC11                      2
     _A_XBREV                      2
     _A_U2MODE                     2
     _A_U2STA                      2
     _A_U2TXREG                    2
     _A_U2RXREG                    2
     _A_MODCON                     2
     _A_SPI1STAT                   2
     _A_SPI1CON1                   2
     _A_SPI1CON2                   2
     _A_CORCON                     2
     _A_SPI2STAT                   2
     _A_SPI2CON1                   2
     _A_SPI2CON2                   2
     _A_SR                         2
     _A_DCICON1                    2
     _A_DCICON2                    2
     _A_DCICON3                    2
     _A_DOENDH                     2
     _A_DOSTARTH                   2
     _A_DCOUNT                     2
     _A_RCOUNT                     2
     _A_PSVPAG                     2
     _A_TBLPAG                     2
     _A_PCH                        2
     _A_DCISTAT                    2
     _A_TSCON                      2
     _A_OC6CON                     2
     _A_CNPU2                      2
     _A_CNPU1                      2
     _A_OC7CON                     2
     _A_CNEN2                      2
     _A_CNEN1                      2
     _A_OC8CON                     2
     _A_I2C1RCV                    2
     _A_I2C1TRN                    2
     _A_I2C1BRG                    2
     _A_I2C1CON                    2
     _A_DISICNT                    2
     _A_I2C1STAT                   2
     _A_I2C1ADD                    2
     _A_I2C1MSK                    2
     _A_I2C2RCV                    2
     _A_I2C2TRN                    2
     _A_I2C2BRG                    2
     _A_I2C2CON                    2
     _A_I2C2STAT                   2
     _A_I2C2ADD                    2
     _A_I2C2MSK                    2
     _A_U1MODE                     2
     _A_U1STA                      2
     _A_U1TXREG                    2
     _A_U1RXREG                    2

 
 120 words in segment CODE
  13 words in segment CONST
 504 bytes in segment MEM_Z
 820 bytes in segment SFR_A
 
 133 words of CODE memory
 504 bytes of DATA memory (+ 820 bytes shared)

Errors: none
Warnings: none
