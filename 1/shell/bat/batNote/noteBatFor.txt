0 前言

1 for的基本用法

1.1 基本形式
    for %%i in (set) do command [command-parameters]
    在cmd环境，引用变量：%i；在批处理环境，引用变量：%%i。
    for /f %%i in (filename) do (...)
    
    
1.2 for语句的基本要素
    （1）for、in、do。
    （2）%%i 是for中对变量的引用形式，即使do后面不使用也必须出现。
    （3）in之后do之前的括号不能省。

1.3 for语句执行过程
    提取set中的一个元素，带入do后面的语句，然后重复，知道set中元素被提取完。

1.4 关于set集合引号问题
   （1）set集合是文件时，不用引号；
   （2）set集合是命令时，使用单引号；
   （3）set集合是字符串时，使用双引号。
   当文件名路径中含有特殊字符时，应该使用引号将路径括起来，但加上引号就不是文件了，这里增加参数usebackq，添加引号的含义改变如下：
   （1）set集合是文件时，无引号变为使用双引号；
   （2）set集合是命令时，单引号变为使用后引号（`);
   （3）set集合是字符串时，双引号变为使用单引号；
    

2 for /f

2.1 基本原理
    在for /f中，set中的元素是文件中的每一行。

2.2 字符串切分：delims=
    在for /f后面添加开关“delims=：，”，set中的每个元素会被“：，”分割为多个节，默认提取第一个节。

2.3 提取特定节
    设置开关tokens可以提取特定的节。节由delims分割得到。
   当提取多个节时， 每个节都需要一个变量接受存储，而形式变量只有一个%%i。for /f 规定如果形式变量是%%i，则第一节存储到%%i，第二节存储到%%j，第三节存储到%%k，，，如此往后。
  节连贯时， tokens可以简写：tokens=3-6

2.4 变量延迟
    每条语句执行前，会经过预处理。变量会被替换成字符串，即使变量值在运行过程中改变了，后面的变量的值也不会更新。所以需要设置变量扩展。
2.4.1 为什么设置变量延迟扩展
    复合语句内部的变量得到实时的更新。
2.4.2 怎样使用
    （1）在需要更新的变量前使用setlocal enabledelayedexpansion，并使用感叹号对代替百分号对来引用变量。
    （2）在需要更新的变量前使用call，并用双层百分号代替单层百分号来引用变量。


3 for /r

3.1 基本形式
    for /r 目录 %%i in （set）do command
3.2 命令解释
    举例“目录”及目录下的所有子目录，并将例举出来的路径和set中提取的元素结合成新路径，对新路径执行command命令。
    特别的：
    （1）当元素集合带以点号分隔的通配符？或*时，把文件集合视为文件，不看为路径，整条语句匹配路径及子路径下的文件；若不以点号分隔，则把元素集合视为文件夹，不看做文件。
    （2）省略目录时，默认当前路径；
    （3）当元素集合中仅有点号时，仅仅举例目录；
    

4 for /d
    仅仅为匹配第一层目录而存在。

5 for /l
    for /loop。
5.1 基本形式
    for /l %%i in （x, y, z)  do command
5.2 解释
    x，y，都只能取整数，正负都可以。
    x表示起始值，y表示步长，z表示终止值。
    以x开始计数，以y为步长，也即每次每次加y，直到最接近z的那个数为止。
