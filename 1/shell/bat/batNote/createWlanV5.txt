@echo off
@title WLAN WIFI
rem change code page 936 GBK
rem @chcp 437>nul
@color 0a
set status=0
mode con lines=30 cols=100
    echo Note:
    echo  **   Firstly you need to create a wlan, then changing the adapter configuration must be  ** 
    echo  **   done in the center of network and share, finally start you wlan network.            **  
    echo  **   Current directory is %cd%.
	:: CD Current Directory
    echo  **   And the WLANConfiguration.txt file will be saved here.                              **
:interface
    echo\
    echo                                 Simply  WIFI  WLAN
    echo   ------------------------------------------------------------------------------------------
    echo      1.Create wlan  2.Start wlan  3.End wlan  4.Update wlan  5.WLAN configuration  0.Quit 
    echo   ------------------------------------------------------------------------------------------
    echo\
    rem Configure the Microsoft Hosted Network Virtual Adapter!!!
    rem choice /c CSEQ /m "Create,Start,End,Quit"
	if exist %cd%\WIFI...\WLANConfiguration.bz ( 
		echo The WLAN WIFI has already created successfully.  
		set status=1 
		set option=2
	)
	if %status%==0 ( 
		echo The WLAN WIFI has not created yet, you need to create it firstly.
		set option=1
	)
    set /p option=Feature:[0-5]?
rem call [:label [arguments]]
if %option%==1 (call :create)
if %option%==2 (call :start)
if %option%==3 (call :stop)
if %option%==4 (call :update)
if %option%==5 (call :query)
if %option%==0 (exit)
:create
	rem Hosted network supported:Yes
	if not exist %cd%\WIFI...\ (md %cd%\WIFI...\)
	rem @chcp 437>nul
	netsh wlan show drivers>%cd%\WIFI...\WLANDrivers.txt
	rem @chcp 936>nul
	for /f "tokens=5 delims= " %%a in ('findstr /c:"Hosted network supported  : Yes" %cd%\WIFI...\WLANDrivers.txt') do (
		set str=%%a 
		setlocal enabledelayedexpansion
		set str=!str:Hosted network supported  : =!
		if not !str! == "" ( 
			echo Your hosted network support is !str!, then you can create the WLAN WIFI.
		) else ( 
			echo Sorry, hosted network is not supported! 
		)
		endlocal
	)
    echo Before the hosted network is set up, you need to set the basic parameters as the following.
    rem SSID(Service Set Identifier) In all, SSID is namely the name of the WLAN in which the computer can communicate with each other
    set /p SSID=SSID:&set /p Key=Key:
    echo **************************************
    echo     SSID:%SSID% Key:%Key%
    echo **************************************
	rem WLAN is often open defaultly or  you need to start it mannully
	rem set mode(device status) to start the virtual network card
    netsh wlan set hostednetwork mode=allow ssid=%SSID% key=%Key%
	rem make a abnormal directory that cannot be removed or copied easily unless by CMD
	
    echo SSID:%SSID% Key:%Key% Date:%date% Time:%time% Created>>%cd%\WIFI...\WLANConfiguration.txt
    rem echo\
	echo Configure the Microsoft Hosted Network Virtual Adapter!!!
    pause>nul
    cls
    goto interface
:start
    netsh wlan start hostednetwork
    pause>nul
    cls
    goto interface
:stop
    netsh wlan stop hostednetwork.
	Choice /c YN /m "Do you want to delete all the WLAN configuration?"
		if %errorlevel%==2 ( cls & goto interface )
		if %errorlevel%==1 ( rd /s/q %cd%\WIFI...\ & echo The %cd%\WIFI... folder is removed. & goto interface )
:update
    echo Now you are updating your WLAN configure.
    set /p SSID=New SSID:&set /p Key=New Key:
    echo **************************************
    echo     SSID:%SSID% Key:%Key%
    echo **************************************
	rem choice /c(choices) /n(no choices) /cs(case sensitive) /t(timeout) /d(default) /m(message)
	rem errorlevel is assigned by the order of choice selecrd
    choice /c YN /m "Are you sure change your WLAN configure,Yes or No?"
        if %errorlevel%==2 (goto interface)
        if %errorlevel%==1 (netsh wlan set hostednetwork mode=allow ssid=%SSID% key=%Key%)
    echo SSID:%SSID% Key:%Key% Date:%date% Time:%time% Updated>>%cd%\WLANConfiguration.txt
    rem echo\
    pause>nul
    cls
    goto interface
:query
	if not exist %cd%\WIFI...\WLANConfiguration.txt ( 
		echo The WLAN WIFI has not created yet, you need to create it first by the feature 1.
		goto interface
	)
    echo Your WLAN configuration is as following.
	rem read the last line in
	rem for /f "delims=" %%i in ('type 1.txt') do set a=%%i  
	rem echo last line:%a%
	rem setlocal enabledelayedexpansion  
	rem set c=0  
	rem for /f "delims=" %%i in ('type 1.txt') do set /a a+=1 
	rem read the last but one line and get the two strings split by space delimeter 
	rem for /f "skip=!a!-2 tokens=1,2 delims=" %%i in (1.txt) do ( echo %%i echo %%j  )  
    for /f "tokens=1,2 delims= " %%i in (%cd%\WIFI...\WLANConfiguration.txt) do set SSID=%%i &set Key=%%j
    echo **************************************
    echo     %SSID%%Key%
    echo **************************************
    rem echo\
    pause>nul
    cls
    goto interface
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::
::                 Colorful Character Echo Output
::    call :Colstr   <attr>   <sp>   <"str">    <bk>     <sp>   <enter>  
::                      |       |       |         |        |       |
::                   color    space   string   backspace  space   enter
::效率：      约18次/s  (XP 5.1/2.4GHz/256M)      
::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::说明：
::   attr   16进位数字颜色属性。请参考16进位数字颜色属性配置演示代码。   attribute
::   sp     范围：{0，正整数} 表示输出空格的格数						 space
::  "str"   要显示的字符串。注意当字符串中含有空格时带上双引号。
::   bk     范围：{正整数} 退格数，即光标左移位数,若设定左移位数为0，函数将强制转换为1   backspace
::   sp     范围：{0，正整数} 0将输出1个冒号，其他正整数表示空格数           space
::   enter  范围：{0，正整数} 0表示不换行（光标不动），其他正整数表示<enter>个数
::   字符串中可以包含除/\:*?,<>|"字符外的任何字符，但不可以全是“空格”或“.”等。
::   判断字符串是否合法的一个有效的办法是看它是否可以作为文件名来使用 
::   请勿试图尝试不合法的参数，函数只保证合法的参数有正确的效果。
::   另外，对某些特殊要求可以尝试用0100色（黑色）字符来“隐藏”冒号
::例：
::call :colstr 0c 3 "abcdef" 1 2 2
::用0c色（鲜红色）依次输出3个空格 abcdef: [光标左移1位] 2个空格 2个回车换行符。
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

rem /*--------- colstr 函数 -------------
:colstr <attr> <sp> <"str"> <bk> <sp> <enter>
	for %%a in (+%2 +%4 +%5 +%6) do (
	   if "%%a"=="+" echo 字符串控制参数不能为空
	   rem exit/b
	   if %%a lss +0 echo 字符串参数越界-
	   if %%a geq +a echo 字符串参数越界+
	)
	if %3 == "" echo 字符串不能为空
	rem pushd 
	rem popd
	rem setlocal ENABLEEXTENSIONS
	pushd %tmp% & setlocal ENABLEEXTENSIONS
	rem >nul 2>nul
	if exist "%~3?" del /a/q "%~3?">nul 2>nul
	if %2 gtr 0 call:%0_bs %2 sp " " & call set/p=%%sp%%<nul
	if %4 gtr 0 (call:%0_bs %4 bk "") else set "bk="
	call:%0_bs %5 sp " "
	set/p=%bk%%sp%<nul>"%~3"&findstr /a:%1 .* "%~3?" 2>nul
	if not %6 equ 0 for /l %%a in (1 1 %6)do echo.
	endlocal & popd 
	rem goto :eof
:Colstr_bs
	set "p=" & for /l %%a in (1 1 %1) do call set "p=%%p%%%~3"
	set "%2=%p%"
rem ------------------------------------*/

rem %表示参数，参数是指在运行批处理文件时在文件名后加的字符串。变量可以从 %0到%9，%0表示文件名本身，字符串用%1到%9顺序表示。
rem (1)%0的应用：
rem dos命令行下输入：aa(代表执行aa.bat批处理程序)，%0代表本身文件，这出现了一个不断执行aa.bat命令的死循环
rem (2)%1到%9的应用

rem (3)转义字符 ^ 要输出特殊字符，就需要用 echo ^>、echo ^|、echo ^|^|、echo ^^……之类的格式来处理
rem (4) 变量引导符 %
rem ① 变量引用：当百分号成对出现，并且其间包含非特殊字符时，如%var%、%str%
rem ② 形式参数的引用，%0 表示批处理文件本身，包括完整的路径和扩展名；%1至%9 表示第一个参数至第九个参数。
rem ③ set /a 语句，表示两数相除取余数。在命令行窗口中，只需要单个的%，在批处理文件中，需要连续两个百分号，写成%%。
rem set /a num=4%%2，得到num为0而非2
rem ④ 转义符号：如果要显示%本身时，需要在前面用%来转义。
rem echo 一个百分号：%%
rem echo 两个百分号：%%%%
rem echo 三个百分号：%%%%%%
rem (5)界定符 ""
rem ① 在表示带有空格或特殊符号的路径时常要用""来将路径括起来。
rem 例1：cd /d cd "d:\program files\^%*abc"
rem 因为路径中带有空格和特殊符号，所以要用""将路径括起来。
rem ② 表示其中的内容是一个完整的字符串。
rem 例2：set "var=abc 123"
rem echo %var%
rem %cd%：显示当前的完整路径

rem ECHO．：输出空行，即相当于输入一个回车
rem 注意命令行中的“．”要紧跟在ECHO后面中间不能有空格，否则“．”将被当作提示信息输出到屏幕。另外“．”可以用,;:+\等任一符号替代。

rem mode con lines=24 cols=69
rem cd\ go backwords the root directory C: D: F: E:
:: 原来，在cmd中，.、..和\表示相对路径，.是当前目录，..是上一层目录，而\表示根目录。要跳转到不同分区的时候，需要添加强制跳转参数 /d 。
:: 可以用 cd.>test.txt 来构造0字节的文本文件。
rem cd.. go backwords the upper level directory

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: EXIT 与 GOTO :EOF 命令的区别
:: 运行 GOTO :EOF 后, CMD 返回并将等待下一条命令.
:: 运行 EXIT 后, CMD 将直接关闭并返回到曾启动 cmd.exe 的程序或返回到”资源管理器”.
:: 在批处理文件的最后一个执行语句中使用,CMD 返回并将等待下一条命令.
:: 在 CALL 命令子标签中使用
:: 		(1) 使用 GOTO :EOF, 将返回到 CALL 命令, FOR 循环也将继续迭代.
:: 		(2) 使用 EXIT, 将直接从批处理文件退出, 不能返回到 CALL 命令, FOR 循环迭代被终止.
:: 		(3) 使用 EXIT /B, 将返回到 CALL 命令, FOR 循环也将继续迭代.
::
:: 关于 GOTO :EOF 的详解
:: 		可以在不定义标签的情况下将控制传送到当前批处理脚本文件的末端.
::  		(1) 启用了命令扩展(即默认状态）;
::			(2) 使用 GOTO 和 :EOF 标签时, 必须在标签前插入(英文状态)冒号.
::
:: 关于 EXIT /B [exitCode] 的详解
::		 cmd.exe 将 ERRORLEVEL 设置为指定的 exitCode. 如果退出 cmd.exe, cmd.exe 则使用指定的 exitCode 设置进程退出代码.
::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::
::


